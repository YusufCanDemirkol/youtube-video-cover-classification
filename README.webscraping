# YouTube Video Kapak Resmi Sınıflandırma Projesi

## Proje Özeti
Bu proje, YouTube video kapak resimlerinin sınıflandırılmasını amaçlamaktadır. İçeriğinde beş farklı transformatör modeli (ViT, DeiT, BEiT, Swin, ConvNext) kullanılmış, performansları karşılaştırılmış ve çıkarımlar yapılmıştır. Projenin önemli adımları; web kazıma, veri işleme, veri arttırımı ve model eğitimidir. Projede toplamda beş kategori için 25.000 görsel kullanılmıştır.

## Geliştirme Ortamı
- **Kodlama Dili:** Python
- **Kütüphaneler:** PyTorch, Transformers, Selenium, Torchvision, Matplotlib, Seaborn
- **Geliştirme Platformu:** Google Colab
- **Donanım:** NVIDIA GPU destekli ortam

## Projenin Kurulumu
1. **Gerekli Kütüphanelerin Yüklenmesi:**
    ```bash
    pip install torch torchvision transformers
    ```
2. **Veri Setinin Hazırlanması:**
   - YouTube'dan veri toplamak için Selenium ile kazıma kodları çalıştırılır.
   - Veriler `zip` formatında saklanır ve çözülerek kullanılır.
3. **Kodların Yüklenmesi ve Çalıştırılması:**
   - Model eğitimi ve test kodları her model için ayrıca çalıştırılır.
   - Performans metrikleri hesaplanır ve görselleştirilir.
4. **Sonuçların Kaydedilmesi:**
   - Eğitilen modeller Google Drive'a kaydedilir.

## Kullanım
1. Proje kodlarını Colab ortamına aktarın.
2. Gerekli veri setini `train` ve `test` klasörlerine ayırın.
3. Belirtilen adımları sırayla takip ederek modelleri eğitin.
4. Performans metriklerini inceleyerek çıkarımları yapın.

## Arayüz Örneği
Proje, terminal tabanlı bir çıktı arayüzüne sahiptir. Çıktılar, görselleştirilen karmaşıklık matrisi, ROC eğrileri ve eğitim/doğrulama kayıp grafiklerinden oluşuyor.

## Proje Detayları
### Web Kazıma
- YouTube üzerinden Selenium ile veri toplama
- Beş farklı kategori: **Eğitim, Spor, Oyun, Belgesel, Yemek**

### Veri İşleme
- Veri ayıklama ve temizleme
- Veri arttırımı: Döndürme, parlaklık artıştırma, renk doygunluğu ekleme, gürültü ekleme
- Boyut normalizasyonu: 224x224

### Modeller
1. **ViT (Vision Transformer)**
2. **DeiT (Data-efficient Image Transformer)**
3. **BEiT (BERT Pre-trained Vision Transformer)**
4. **Swin Transformer**
5. **ConvNext**

### Performans Analizleri
- **Metikler:** Accuracy, Precision, Recall, F1-Score, Specificity, AUC, Inference Time
- **Grafikler:** Karmaşıklık Matrisi, ROC Eğrisi, Eğitim/Doğrulama Kayıp Grafiği
- **Sonuçlar:** Swin modeli, genel performans ve hız açısından en iyi sonucu vermiştir.

---

Projeyi yüklemek ve çalıştırmak için detaylı bilgiler için geliştiricilere ulaşabilirsiniz:
- Yusuf Can Demirkol: josephacn86@gmail.com
- Muhammed Abdullah Acar: acar167257@gmail.com






